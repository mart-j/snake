{"version":3,"sources":["grid/Grid.tsx","App.tsx","reportWebVitals.ts","index.tsx","grid/Grid.module.scss"],"names":["gridArr","countX","countY","i","push","console","log","Grid","apple","tail","position","className","styles","grid","unitWrapper","map","unit","cx","JSON","stringify","active","includes","App","useState","positionX","setPositionX","positionY","setPositionY","setPosition","key","setKey","setTail","setApple","tick","setTick","isGameRunning","setIsGameRunning","useEffect","snakeMovement","setTimeout","currentKey","useRef","window","addEventListener","event","current","isFirstRun","tailArr","unshift","pop","tailFollowsHead","eatApple","eatsTail","getRandomNum","max","Math","floor","random","numArr","tailCantBeApple","newTail","style","display","flexDirection","alignItems","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.571d173c.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport cx from 'classnames';\nimport styles from './Grid.module.scss';\n\nconst gridArr: number[][] = [];\nlet countX = -1;\nlet countY = 0;\n\nfor (let i = 0; i < 400; i++) {\n  if (countX === 19) {\n    countY += 1;\n  }\n  if (countX === 19) {\n    countX = -1;\n  }\n  gridArr.push([(countX += 1), countY]);\n}\n\nconsole.log(gridArr);\n\ninterface Props {\n  tail: number[][];\n  position: number[];\n  apple: number[];\n}\n\nconst Grid: FC<Props> = ({ apple, tail, position }) => {\n  return (\n    <>\n      <div className={styles.grid}></div>\n      <div className={styles.unitWrapper}>\n        {gridArr.map((unit, i) => {\n          return (\n            <div\n              className={cx(\n                styles.unit,\n                JSON.stringify(unit) === JSON.stringify(position) &&\n                  styles.active,\n                JSON.stringify(tail).includes(JSON.stringify(unit)) &&\n                  styles.tail,\n                JSON.stringify(apple).includes(JSON.stringify(unit)) &&\n                  styles.apple,\n              )}\n              key={`${i}`}\n            ></div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\nexport default Grid;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Grid from './grid/Grid';\n\nconst App = () => {\n  const [positionX, setPositionX] = useState(0);\n  const [positionY, setPositionY] = useState(0);\n  const [position, setPosition] = useState([0, 0]);\n  const [key, setKey] = useState('');\n  const [tail, setTail] = useState([\n    [-2, 7],\n    [-1, 7],\n  ]);\n  const [apple, setApple] = useState([4, 3]);\n  const [tick, setTick] = useState(false);\n  const [isGameRunning, setIsGameRunning] = useState(false);\n\n  const ticking = () => {\n    setTimeout(() => {\n      setTick(!tick);\n    }, 100);\n  };\n\n  useEffect(() => {\n    snakeMovement();\n    ticking();\n  }, [tick]);\n\n  const currentKey = useRef('');\n\n  useEffect(() => {\n    window.addEventListener('keydown', (event) => {\n      if (\n        (event.key === 'ArrowRight' && currentKey.current !== 'ArrowLeft') ||\n        (event.key === 'ArrowLeft' && currentKey.current !== 'ArrowRight') ||\n        (event.key === 'ArrowUp' && currentKey.current !== 'ArrowDown') ||\n        (event.key === 'ArrowDown' && currentKey.current !== 'ArrowUp')\n      ) {\n        setKey(event.key);\n        currentKey.current = event.key;\n      }\n    });\n  }, []);\n\n  const goTroughWalls = () => {\n    if (positionY > 19) {\n      setPositionY(0);\n    } else if (positionY < 0) {\n      setPositionY(19);\n    } else if (positionX > 19) {\n      setPositionX(0);\n    } else if (positionX < 0) {\n      setPositionX(19);\n    }\n  };\n\n  const tailFollowsHead = () => {\n    const tailArr = [...tail];\n    tailArr.unshift(position);\n    tailArr.pop();\n    setTail([...tailArr]);\n  };\n\n  const snakeMovement = () => {\n    if (key === 'ArrowRight') {\n      setPositionX(positionX + 1);\n    } else if (key === 'ArrowLeft') {\n      setPositionX(positionX - 1);\n    } else if (key === 'ArrowUp') {\n      setPositionY(positionY - 1);\n    } else if (key === 'ArrowDown') {\n      setPositionY(positionY + 1);\n    }\n\n    goTroughWalls();\n  };\n\n  useEffect(() => {\n    snakeMovement();\n  }, [key]);\n  const isFirstRun = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setPosition([positionX, positionY]);\n    tailFollowsHead();\n    eatApple();\n    eatsTail();\n  }, [positionX, positionY]);\n\n  const eatsTail = () => {\n    if (JSON.stringify(tail).includes(JSON.stringify(position))) {\n      console.log('Auch');\n      setTail([\n        [-1, 0],\n        [-2, 0],\n      ]);\n      setPosition([-5, 0]);\n      setIsGameRunning(!isGameRunning);\n      setKey('');\n    }\n  };\n\n  const getRandomNum = (max: number) => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  const tailCantBeApple = () => {\n    let numArr = [getRandomNum(19), getRandomNum(19)];\n    while (\n      JSON.stringify(tail).includes(JSON.stringify(numArr)) ||\n      JSON.stringify(position) === JSON.stringify(numArr)\n    ) {\n      numArr = [getRandomNum(19), getRandomNum(19)];\n    }\n    setApple(numArr);\n  };\n\n  const eatApple = () => {\n    if (JSON.stringify(position) === JSON.stringify(apple)) {\n      tailCantBeApple();\n      const newTail = [...tail];\n      newTail.unshift(position);\n      setTail(newTail);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <h1>Snake</h1>\n\n      {isGameRunning ? (\n        <>\n          <div>Press arrow to start</div>\n          <Grid apple={apple} tail={tail} position={position} />\n        </>\n      ) : (\n        <button onClick={() => setIsGameRunning(!isGameRunning)}>Play</button>\n      )}\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unitWrapper\":\"Grid_unitWrapper__We6xJ\",\"unit\":\"Grid_unit__3i-t1\",\"active\":\"Grid_active__9v9qI\",\"tail\":\"Grid_tail__3Zpz5\",\"apple\":\"Grid_apple__gPStO\"};"],"sourceRoot":""}